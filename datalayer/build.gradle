apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply plugin: "kotlin-allopen"

android {
    compileSdkVersion rootProject.compileSdkVersion

    defaultConfig {
        minSdkVersion rootProject.minSdkVersion
        targetSdkVersion rootProject.targetSdkVersion
        versionCode 1
        versionName "1.0"
        multiDexEnabled true
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    kapt {
        generateStubs = true
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_7
        targetCompatibility JavaVersion.VERSION_1_7
    }

    sourceSets {
        String sharedTestDir = 'src/sharedTest/kotlin'
        test {
            java.srcDir sharedTestDir
        }
        androidTest {
            java.srcDir sharedTestDir
        }
        test.java.srcDirs += 'src/test/kotlin'
        test.res.srcDirs += 'src/sharedTest/resources'
        androidTest.java.srcDirs += 'src/androidTest/kotlin'
        androidTest.res.srcDirs += 'src/sharedTest/resources'
    }

    allOpen {
        annotation("ciriti.datalayer.annotation.MakeItOpenForTest")
    }

}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    // kotlin
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation "com.squareup.retrofit2:retrofit:$retrofit_version"
    implementation "com.squareup.retrofit2:adapter-rxjava2:$retrofit_version"
    implementation "com.squareup.retrofit2:converter-gson:$retrofit_version"
    implementation "com.squareup.okhttp3:logging-interceptor:$okhttp_version"
    implementation "com.squareup.okhttp3:okhttp:$okhttp_version"
    // Room
//    implementation "android.arch.persistence.room:runtime:$room_version"
//    kapt "android.arch.persistence.room:compiler:$room_version"
    // optional - RxJava support for Room
//    implementation "android.arch.persistence.room:rxjava2:$room_version"
    // optional - Guava support for Room, including Optional and ListenableFuture
    implementation "android.arch.persistence.room:guava:$room_version"
    // rxandroid
    implementation 'io.reactivex.rxjava2:rxandroid:' + rootProject.rxjava_version
    //Firestore
    implementation "com.google.firebase:firebase-core:$firebase_ver"
    implementation "com.google.firebase:firebase-firestore:$firestore_ver"

    // Test helpers
    testImplementation "android.arch.persistence.room:testing:$room_version"
    testImplementation "com.nhaarman:mockito-kotlin:1.5.0"
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test:runner:1.1.0-alpha3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.1.0-alpha3'
    androidTestImplementation "com.nhaarman:mockito-kotlin:1.5.0"
}
